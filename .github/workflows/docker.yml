name: Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  image:
    name: Build image ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ web, worker, legacy-importer ]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Build the Docker image
      uses: docker/bake-action@v2.2.0
      with:
        files: |
          ./docker-compose.yml
          ./docker-compose.importer.yml
        targets: ${{ matrix.target }}
        set: |
          *.output=type=docker,dest=/tmp/image-${{ matrix.target }}.tar
          *.cache-from=type=gha,scope=build-${{ matrix.target }}
          *.cache-to=type=gha,scope=build-${{ matrix.target }},mode=max
    - uses: actions/upload-artifact@v3
      with:
        name: docker-image-${{ matrix.target }}
        path: /tmp/image-${{ matrix.target }}.tar

  push:
    name: Push ${{ matrix.target }}
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs: image
    strategy:
      matrix:
        target: [ web, worker, legacy-importer ]
    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - uses: actions/download-artifact@v3
      with:
        name: docker-image-${{ matrix.target }}
        path: /tmp/image-${{ matrix.target }}.tar
    - name: Load docker image
      run: docker load --input /tmp/image-${{ matrix.target }}.tar
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Push image  
      run: |
        IMAGE_ID=ghcr.io/${{ github.repository }}/${{ matrix.target }}
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        # Use Docker `latest` tag convention
        [ "$VERSION" == "main" ] && VERSION=latest
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag gw2treasures/${{ matrix.target }} $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION

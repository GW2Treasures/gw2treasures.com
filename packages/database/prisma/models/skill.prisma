model Skill {
  id Int @id

  name_de String
  name_en String
  name_es String
  name_fr String

  icon   Icon? @relation(fields: [iconId], references: [id])
  iconId Int?

  flags String[]

  professions Profession[]

  affectedByTraits      Trait[] @relation("skill_traited_facts")
  affectedByTraitIdsRaw Int[]

  chainSkills  Skill[] @relation("chainSkills")
  chainSkills_ Skill[] @relation("chainSkills")

  flippedSkill   Skill[] @relation("flipSkill")
  flipSkill      Skill?  @relation("flipSkill", fields: [flipSkillId], references: [id])
  flipSkillId    Int?
  flipSkillIdRaw Int?

  removedFromApi Boolean @default(false)

  views Int @default(0)

  current_de   Revision @relation("current_de", fields: [currentId_de], references: [id], onDelete: Cascade)
  currentId_de String   @unique

  current_en   Revision @relation("current_en", fields: [currentId_en], references: [id], onDelete: Cascade)
  currentId_en String   @unique

  current_es   Revision @relation("current_es", fields: [currentId_es], references: [id], onDelete: Cascade)
  currentId_es String   @unique

  current_fr   Revision @relation("current_fr", fields: [currentId_fr], references: [id], onDelete: Cascade)
  currentId_fr String   @unique

  history SkillHistory[]

  lastCheckedAt DateTime @default(now())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  version Int @default(0)

  @@index([createdAt])
  @@index([name_de(ops: raw("gin_trgm_ops")), name_en(ops: raw("gin_trgm_ops")), name_es(ops: raw("gin_trgm_ops")), name_fr(ops: raw("gin_trgm_ops"))], type: Gin)
}

model SkillHistory {
  skillId    Int
  revisionId String

  skill    Skill    @relation(fields: [skillId], references: [id], onDelete: Cascade)
  revision Revision @relation(fields: [revisionId], references: [id], onDelete: Cascade)

  @@id([skillId, revisionId])
}

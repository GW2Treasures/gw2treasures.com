model Profession {
  id String @id

  name_de String
  name_en String
  name_es String
  name_fr String

  icon   Icon? @relation("icon", fields: [iconId], references: [id])
  iconId Int?

  iconBig   Icon? @relation("iconBig", fields: [iconBigId], references: [id])
  iconBigId Int?

  skillIds Int[]
  skills   Skill[]

  removedFromApi Boolean @default(false)

  current_de   Revision @relation("current_de", fields: [currentId_de], references: [id], onDelete: Cascade)
  currentId_de String   @unique

  current_en   Revision @relation("current_en", fields: [currentId_en], references: [id], onDelete: Cascade)
  currentId_en String   @unique

  current_es   Revision @relation("current_es", fields: [currentId_es], references: [id], onDelete: Cascade)
  currentId_es String   @unique

  current_fr   Revision @relation("current_fr", fields: [currentId_fr], references: [id], onDelete: Cascade)
  currentId_fr String   @unique

  history ProfessionHistory[]

  lastCheckedAt DateTime @default(now())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  version Int @default(0)
}

model ProfessionHistory {
  professionId String
  revisionId   String

  profession Profession @relation(fields: [professionId], references: [id], onDelete: Cascade)
  revision   Revision   @relation(fields: [revisionId], references: [id], onDelete: Cascade)

  @@id([professionId, revisionId])
}

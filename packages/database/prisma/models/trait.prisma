model Trait {
  id Int @id

  name_de String
  name_en String
  name_es String
  name_fr String

  icon   Icon? @relation(fields: [iconId], references: [id])
  iconId Int?

  specialization      Specialization? @relation(fields: [specializationId], references: [id], onDelete: Cascade)
  specializationId    Int?
  specializationIdRaw Int

  order Int
  tier  Int
  slot  TraitSlot

  affectsSkills Skill[] @relation("skill_traited_facts")

  affectsTraits         Trait[] @relation("trait_traited_facts")
  affectedByTraits      Trait[] @relation("trait_traited_facts")
  affectedByTraitIdsRaw Int[]

  removedFromApi Boolean @default(false)

  current_de   Revision @relation("current_de", fields: [currentId_de], references: [id], onDelete: Cascade)
  currentId_de String   @unique

  current_en   Revision @relation("current_en", fields: [currentId_en], references: [id], onDelete: Cascade)
  currentId_en String   @unique

  current_es   Revision @relation("current_es", fields: [currentId_es], references: [id], onDelete: Cascade)
  currentId_es String   @unique

  current_fr   Revision @relation("current_fr", fields: [currentId_fr], references: [id], onDelete: Cascade)
  currentId_fr String   @unique

  history TraitHistory[]

  lastCheckedAt DateTime @default(now())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  version Int @default(0)
}

model TraitHistory {
  traitId    Int
  revisionId String

  trait    Trait    @relation(fields: [traitId], references: [id], onDelete: Cascade)
  revision Revision @relation(fields: [revisionId], references: [id], onDelete: Cascade)

  @@id([traitId, revisionId])
}

enum TraitSlot {
  Major
  Minor
}
